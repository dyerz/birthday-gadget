<?xml version="1.0" encoding="UTF-8"?>
<Module>
<ModulePrefs title="__UP_title__"
  directory_title="__MSG_title__"
  description="__MSG_description__"
  screenshot="http://birthday-gadget.googlecode.com/svn/trunk/screenshot.png"
  thumbnail="http://birthday-gadget.googlecode.com/svn/trunk/thumbnail.png"
  author="Adam"
  author_email="birthdaygadget@gmail.com"
  height="200">
    <Locale messages="http://birthday-gadget.googlecode.com/svn/trunk/new/bd_content/ALL_ALL.xml" />
    <Require feature="idi" /> 
    <Require feature="locked-domain" /> 
    <Require feature="analytics" /> 
    <Require feature="dynamic-height" />
    <Require feature="setprefs"/>
    <Require feature="minimessage"/>
</ModulePrefs>
<UserPref name="title" display_name="__MSG_titleName__" default_value="__MSG_title__" />
<UserPref name="dateFormat" display_name="__MSG_formatName__" default_value="0" datatype="enum" >
  <EnumValue value="0" display_value="MMM DD" />
  <EnumValue value="1" display_value="DD MMM" />
  <EnumValue value="2" display_value="MM/DD" />
  <EnumValue value="3" display_value="DD/MM" />
</UserPref>
<UserPref name="showBDay" display_name="__MSG_showName__" default_value="5" datatype="enum" >
  <EnumValue value="1" />
  <EnumValue value="2" />
  <EnumValue value="3" />
  <EnumValue value="4" />
  <EnumValue value="5" />
  <EnumValue value="6" />
  <EnumValue value="7" />
  <EnumValue value="8" />
  <EnumValue value="9" />
  <EnumValue value="10" />
  <EnumValue value="0" display_value="All" />
</UserPref>
<UserPref name="warn_past" display_name="__MSG_pastNoticeName__" default_value="0" datatype="enum" >
  <EnumValue value="0" />
  <EnumValue value="3" />
  <EnumValue value="7" />
  <EnumValue value="10" />
  <EnumValue value="14" />
</UserPref>
<UserPref name="warn_forward" display_name="__MSG_futureNoticeName__" default_value="7" datatype="enum" >
  <EnumValue value="3" />
  <EnumValue value="7" />
  <EnumValue value="10" />
  <EnumValue value="14" />
  <EnumValue value="21" />
  <EnumValue value="30" />
  <EnumValue value="60" />
  <EnumValue value="90" /> 
  <EnumValue value="0" display_value="All" /> 
</UserPref>
<UserPref name="_table_query_url" display_name="Data source url" required="true" /> 
<Content type="html">
<![CDATA[ 

  <style>
  table {
    border-collapse: collapse; 
    width: 100%;
  }

  td {
    padding: 2px;
    font-size: 11px;
    text-align: center;
  }

  .colid {
    font-weight: bold;
    border-bottom: 1px solid #000000;
    text-align: center;
  }

  #toolbar{
    width: 100%;
    height: 12px;
    text-align: center;
    margin: 0; padding: 0; 
    
  
  }
  
  #tablediv{
    width: 100%; 
    margin: 0; padding: 0;
  
  }
  
  #tbRefresh{
    cursor: pointer;
    color: #0000FF;
    text-decoration: underline;
  
  }
  
  </style>

  <!-- Load the Google common loader, that is later used to load the Visualization API. -->
  <script src="http://www.google.com/jsapi" type="text/javascript"></script>

  <div id="toolbar"><table><tr>
    <td id="tbEdit"></td>
    <td>Help</td>
    <td id="tbRefresh">Refresh</td>
  </tr></table></div>
  <div id="tablediv" >Loading...</div>

  <script>
    // Load the Google Visualization API
    google.load("visualization", "1");
    var gadgetHelper = null;
    var dateStyle__MODULE_ID__;
    var urlPref;
    var prefs;
    
    function init(){
      prefs = new _IG_Prefs();
      dateStyle__MODULE_ID__=prefs.getInt("dateFormat");
      urlPref=prefs.getString("_table_query_url");
      if(urlPref.search(/tq\?/)==-1 && urlPref.search(/ccc\?/)!=-1 ){
        urlPref=urlPref.replace(/ccc\?/, "tq?");
        if(urlPref.search(/\&/)==-1) urlPref=urlPref.substring(0, urlPref.indexOf("&"));
        prefs.set("_table_query_url", escapeHtml(urlPref));
        prefs = new _IG_Prefs();
      }
      urlPref=urlPref.replace(/tq\?/, "ccc?");
      urlPref=urlPref.substring(0, urlPref.indexOf("&"));
      
      _gel("tbEdit").innerHTML='<a target="_blank" href="'+urlPref+'">Edit</a>';
      _gel("tbRefresh").onclick=function(){location.reload(true);}
          
    }

    function sendQuery() {
      init();
      gadgetHelper = new google.visualization.GadgetHelper();
      var query = gadgetHelper.createQueryFromPrefs(prefs);
      query.send(handleQueryResponse);
    }

    /**
     * Query response handler function.
     * Called by the Google Visualization API once the response is received.
     * Takes the query response and formats it as a table.
     */
    function handleQueryResponse(response) {
      // Use the visualization GadgetHelper class to validate the data, and
      // for error handling.
      if (!gadgetHelper.validateResponse(response)) {
        // Default error handling was done, just leave.
        return;
      };

      // Take the data table from the response, and format it. 
      var data = response.getDataTable();
      var html = [];
      var rowDate, dispAge=0, dispDate="";
      
      html.push('<table cellpaddind="0" cellspacing="0">');

      // Header row for column Ids
      html.push('<tr><td class="colid">Date</td><td class="colid">Name</td><td class="colid">Age</td></tr>');


      // Add the data rows
      for (var row = 0; row < data.getNumberOfRows(); row++) {
        html.push('<tr>');
        rowDate=Date.parse(data.getFormattedValue(row, 0));
        if(isNaN(rowDate)) alert("Date Error");
        dispDate=makeDate__MODULE_ID__(data.getFormattedValue(row, 0));
        dispAge=makeAge(rowDate);

        
        html.push('<td>'+dispDate+'</td>');
        html.push('<td>'+escapeHtml(data.getFormattedValue(row, 1))+'</td>');
        html.push('<td>'+dispAge+'</td>');
        html.push('</tr>');
      }
      html.push('</table>');

      // Set the generated html into the container div.
      _gel('tablediv').innerHTML = html.join('');
      _IG_AdjustIFrameHeight();
    };

    /**
     * Escape special html characters to prevent data that contains characters
     * like '<' or '>' to mess up the generated html.
     */
    function escapeHtml(text) {
      if (text == null) {
        return '';
      }
      return text.replace(/&/g, '&amp;').
          replace(/</g, '&lt;').
          replace(/>/g, '&gt;').
          replace(/"/g, '&quot;');
    }

    function makeAge(rowDate){
      var d=new Date(); var p=new Date(); p.setTime(rowDate); 
      var age=d.getFullYear()-p.getFullYear();
      if(d.getMonth()>p.getMonth()) age--;
      else if(d.getMonth()==p.getMonth() && d.getDate()>=p.getDate()) age--;
      return(age++);}
    
    function makeDate__MODULE_ID__(inDate){
    var month=new Array(12);
      month[0]="__MSG_ajan__";
      month[1]="__MSG_afeb__";
      month[2]="__MSG_amar__";
      month[3]="__MSG_aapr__";
      month[4]="__MSG_amay__";
      month[5]="__MSG_ajun__";
      month[6]="__MSG_ajul__";
      month[7]="__MSG_aaug__";
      month[8]="__MSG_asep__";
      month[9]="__MSG_aoct__";
      month[10]="__MSG_anov__";
      month[11]="__MSG_adec__";
    tempArr=inDate.split("/");
    if(tempArr.length==2) {m=tempArr[0]-1; d=parseInt(tempArr[1]);}
    else {var t=Date.parse(inDate); var b=new Date(); b.setTime(t); m=b.getMonth(); d=b.getDate();}
    var n=new Date(); if(n.getMonth()==m && n.getDate()==d ) return("__MSG_today__");
    switch(dateStyle__MODULE_ID__){
      case 0: return (month[m]+" "+d);
      case 1: return (d+" "+month[m]);
      case 2: return ((m+1)+"/"+d);
      case 3: return (d+"/"+(m+1));}}


    // Set the table size.
    //_gel('tablediv').style.height = (document.body.clientHeight - 2) + 'px';

    // Set a callback function to be called by the loader once the visualization API is loaded.
    google.setOnLoadCallback(sendQuery);

  </script>

  

  ]]> 
</Content>
</Module>
